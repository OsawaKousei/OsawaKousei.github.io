import { Button } from "@/components/ui/button";
import { ExternalLink, Github } from "lucide-react";

export default function Works() {
  const projects = [
    {
      title: "NEDO NEP ÈñãÊãì„Ç≥„Éº„Çπ 2025 FR",
      description: "NEPÈñãÊãì„Ç≥„Éº„ÇπFR„Å®„Åó„Å¶Ê®°ÂÄ£Â≠¶Áøí„ÇíÁî®„ÅÑ„Åü„É≠„Éú„ÉÉ„ÉàÂà∂Âæ°„ÅÆÁ†îÁ©∂ÈñãÁô∫Âèä„Å≥‰∫ãÊ•≠Âåñ„Å´Âèñ„ÇäÁµÑ„Çì„Åß„ÅÑ„Åæ„Åô„ÄÇ",
      image: "üìù",
      tech: ["Python","LeRobot", "Genesis", "ROS 2"],
      category: "Biz Dev",
      featured: true,
      codeUrl: "https://github.com/orgs/KyotoVLATech/repositories",
      demoUrl: "https://nep.nedo.go.jp/selected/4e3c2d5a-de3f-4caf-ad31-239a104f091e",
      codeText: "GitHub",
      demoText: "Site"
    },
    {
      title: "NHK Â≠¶Áîü„É≠„Éú„Ç≥„É≥ 2025",
      description: "NHKÂ≠¶Áîü„É≠„Éú„Ç≥„É≥2025„Å´‰∫¨ÈÉΩÂ§ßÂ≠¶‰ª£Ë°®„ÉÅ„Éº„É†„Å®„Åó„Å¶ÂèÇÂä†„ÄÇ„É≠„Éú„ÉÉ„Éà„Ç¢„Éº„É†„ÅÆÂà∂Âæ°„Å®„Çπ„Éû„Éõ„Ç≥„É≥„Éà„É≠„Éº„É©„ÉºÈñãÁô∫„ÇíÊãÖÂΩì„ÄÇ",
      image: "ü§ñ",
      tech: ["C", "C++", "Kotlin", "CubeIDE", "ROS 2", "Android Studio"],
      category: "Robotics",
      featured: true,
      codeUrl: "https://github.com/OsawaKousei/nhk_2025_arm_ctrl",
      demoUrl: "https://www.kikaiken.org/activities.html",
      codeText: "GitHub",
      demoText: "Ê©üÊ¢∞Á†î„Ç¶„Çß„Éñ„Çµ„Ç§„Éà"
    },
    {
      title: "AIÁï∞Â∏∏Ê§úÁü•„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥(CLOSED)",
      description: "ÊïôÂ∏´ÁÑ°„Åó„Éô„Éº„Çπ„ÅÆÁï∞Â∏∏Ê§úÁü•„ÇíË°å„ÅÜ„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÄÇ„Ç§„É≥„Çø„Éº„É≥„ÅßÈñãÁô∫„Åó„ÄÅÊèêÊ°à‰ΩúÊàê„Åã„ÇâÈñãÁô∫PM„ÄÅÂÆ¢ÂÖàË™øÊï¥„Åæ„ÅßÊãÖÂΩì„ÄÇ",
      image: "üìä",
      tech: ["Python", "C#", "PyTorch", "WPF"],
      category: "AI „Éª Desktop Application",
      featured: false,
      codeUrl: null,
      demoUrl: null,
      codeText: "Code",
      demoText: "Demo"
    },
    {
      title: "„ÅäÂïè„ÅÑÂêà„Çè„ÅõChat„Éú„ÉÉ„Éà(CLOSED)",
      description: "ÂïÜÂìÅ„Å´Èñ¢„Åô„Çã„ÅäÂïè„ÅÑÂêà„Çè„Åõ„ÇíËá™Âãï„ÅßÂèó„Åë‰ªò„Åë„Çã„ÉÅ„É£„ÉÉ„Éà„Éú„ÉÉ„Éà„ÄÇ„Ç§„É≥„Éï„É©ÊßãÁØâ„Åã„Çâ„Éï„É≠„É≥„Éà„Éª„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„ÅÆÈñãÁô∫„Åæ„ÅßÊãÖÂΩì„ÄÇ",
      image: "üåê",
      tech: ["TypeScript", "Python", "Next.js", "FastAPI", "Docker", "AWS"],
      category: "AI „Éª Web Application",
      featured: false,
      codeUrl: null,
      demoUrl: null,
      codeText: "Code",
      demoText: "Expo Demo"
    }
  ];

  const featuredProjects = projects.filter(p => p.featured);
  const otherProjects = projects.filter(p => !p.featured);

  return (
    <section id="works" className="py-20 bg-slate-50 w-full">
      <div className="w-full px-6">
        <div className="max-w-7xl mx-auto">
          {/* Header */}
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-slate-900 mb-4">Featured Works</h2>
            <p className="text-slate-600 text-lg max-w-2xl mx-auto">
              „Åì„Çå„Åæ„Åß„Å´Âèñ„ÇäÁµÑ„Çì„Å†‰ª£Ë°®ÁöÑ„Å™„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Çí„ÅîÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ
            </p>
          </div>

          {/* Featured Projects */}
          <div className="grid lg:grid-cols-2 gap-8 mb-16">
            {featuredProjects.map((project, index) => (
              <div
                key={index}
                className="group bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 overflow-hidden border border-slate-200"
              >
                <div className="p-8">
                  <div className="flex items-center justify-between mb-4">
                    <div className="text-4xl">{project.image}</div>
                    <span className="text-xs font-medium text-slate-500 bg-slate-100 px-3 py-1 rounded-full">
                      {project.category}
                    </span>
                  </div>
                  <h3 className="text-xl font-bold text-slate-900 mb-3 group-hover:text-blue-600 transition-colors">
                    {project.title}
                  </h3>
                  <p className="text-slate-600 mb-4 leading-relaxed">
                    {project.description}
                  </p>
                  <div className="flex flex-wrap gap-2 mb-6">
                    {project.tech.map((tech, techIndex) => (
                      <span
                        key={techIndex}
                        className="text-xs font-medium text-blue-700 bg-blue-100 px-2 py-1 rounded-md"
                      >
                        {tech}
                      </span>
                    ))}
                  </div>
                  <div className="flex gap-3">
                    {project.codeUrl && (
                      <Button 
                        size="sm" 
                        variant="outline" 
                        className="text-slate-600 border-slate-300 hover:bg-slate-100"
                        asChild
                      >
                        <a href={project.codeUrl} target="_blank" rel="noopener noreferrer">
                          <Github className="h-4 w-4 mr-2" />
                          {project.codeText}
                        </a>
                      </Button>
                    )}
                    {project.demoUrl && (
                      <Button 
                        size="sm" 
                        className="bg-blue-600 hover:bg-blue-700"
                        asChild
                      >
                        <a href={project.demoUrl} target="_blank" rel="noopener noreferrer">
                          <ExternalLink className="h-4 w-4 mr-2" />
                          {project.demoText}
                        </a>
                      </Button>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Other Projects */}
          <div>
            <h3 className="text-2xl font-bold text-slate-900 mb-8 text-center">Other Projects</h3>
            <div className="grid md:grid-cols-2 gap-6">
              {otherProjects.map((project, index) => (
                <div
                  key={index}
                  className="bg-white p-6 rounded-xl shadow-md hover:shadow-lg transition-all border border-slate-200"
                >
                  <div className="flex items-center justify-between mb-3">
                    <div className="text-2xl">{project.image}</div>
                    <span className="text-xs text-slate-500">{project.category}</span>
                  </div>
                  <h4 className="font-bold text-slate-900 mb-2">{project.title}</h4>
                  <p className="text-slate-600 text-sm mb-3">{project.description}</p>
                  <div className="flex flex-wrap gap-1 mb-3">
                    {project.tech.map((tech, techIndex) => (
                      <span key={techIndex} className="text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded">
                        {tech}
                      </span>
                    ))}
                  </div>
                  <div className="flex gap-2">
                    {project.codeUrl && (
                      <Button 
                        size="sm" 
                        variant="ghost" 
                        className="text-slate-500 p-1"
                        asChild
                      >
                        <a href={project.codeUrl} target="_blank" rel="noopener noreferrer">
                          <Github className="h-4 w-4" />
                        </a>
                      </Button>
                    )}
                    {project.demoUrl && (
                      <Button 
                        size="sm" 
                        variant="ghost" 
                        className="text-slate-500 p-1"
                        asChild
                      >
                        <a href={project.demoUrl} target="_blank" rel="noopener noreferrer">
                          <ExternalLink className="h-4 w-4" />
                        </a>
                      </Button>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
